version: "3"

services:
  automuteus:
    # Either:
    # - Use a prebuilt image
    image: automuteus/automuteus:${AUTOMUTEUS_TAG:?err}
    # - Use an old prebuilt image (prior to 6.16.1)
    #image: denverquane/amongusdiscord:${AUTOMUTEUS_TAG:?err}
    # - Build image from local source
    #build: ../automuteus
    # - Build image from github directly
    #build: https://github.com/automuteus/automuteus.git

    restart: always
    environment:
      # These are required and will fail if not present
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN:?err}
      - HOST=${GALACTUS_HOST:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASS=${POSTGRES_PASS:?err}

      # These Variables are optional
      - WORKER_BOT_TOKENS=${WORKER_BOT_TOKENS:-}
      - EMOJI_GUILD_ID=${EMOJI_GUILD_ID:-}
      - CAPTURE_TIMEOUT=${CAPTURE_TIMEOUT:-}
      - AUTOMUTEUS_LISTENING=${AUTOMUTEUS_LISTENING:-}
      - AUTOMUTEUS_GLOBAL_PREFIX=${AUTOMUTEUS_GLOBAL_PREFIX:-}
      - BASE_MAP_URL=${BASE_MAP_URL:-}

      # Do **NOT** change this
      - REDIS_ADDR=${AUTOMUTEUS_REDIS_ADDR}
      - GALACTUS_ADDR=${GALACTUS_ADDR}
      - POSTGRES_ADDR=${POSTGRES_ADDR}
    depends_on:
      - redis
      - galactus
      - postgres
      - nginx-proxy-letsencrypt
    volumes:
      - "bot-logs:/app/logs"

  galactus:
    image: automuteus/galactus:${GALACTUS_TAG:?err}
    restart: always
    environment:
      # Do **NOT** change these
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN:?err}
      - BROKER_PORT=${BROKER_PORT}
      - REDIS_ADDR=${GALACTUS_REDIS_ADDR}
      - GALACTUS_PORT=${GALACTUS_PORT}
      - VIRTUAL_HOST=${LETSENCRYPT_HOST}
      - VIRTUAL_PORT=${GALACTUS_EXTERNAL_PORT:-8123}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - redis
      - nginx-proxy-letsencrypt

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - "redis-data:/data"

  postgres:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

  nginx-proxy:
    image: jwilder/nginx-proxy:${NGINXPROXY_TAG:?err}
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    restart: always
    environment:
      - HTTPS_PORT=${REVERSEPROXY_EXTERNAL_PORT:-443}
    ports:
      - 80:80
      - ${REVERSEPROXY_EXTERNAL_PORT:-443}:${REVERSEPROXY_EXTERNAL_PORT:-443}
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:${NGINXPROXY_COMPANION_TAG:?err}
    restart: always
    environment:
      - ACME_CA_URI=${ACME_CA_URI:?err}
    depends_on:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  bot-logs:
  redis-data:
  postgres-data:
  certs:
  vhost:
  html:
