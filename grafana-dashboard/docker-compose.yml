version: "3"

services:
  automuteus:
    # Either:
    # - Use a prebuilt image
    image: automuteus/automuteus:${AUTOMUTEUS_TAG:?err}
    # - Use an old prebuilt image (prior to 6.16.1)
    #image: denverquane/amongusdiscord:${AUTOMUTEUS_TAG:?err}
    # - Build image from local source
    #build: ../automuteus
    # - Build image from github directly
    #build: https://github.com/automuteus/automuteus.git

    # Uncomment to expose API
    #ports:
    #  - ${API_PORT:-80}:${SERVICE_PORT}
    restart: always
    environment:
      # These are required and will fail if not present
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN:?err}
      - HOST=${GALACTUS_HOST:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASS=${POSTGRES_PASS:?err}

      # These Variables are optional
      - WORKER_BOT_TOKENS=${WORKER_BOT_TOKENS:-}
      - EMOJI_GUILD_ID=${EMOJI_GUILD_ID:-}
      - CAPTURE_TIMEOUT=${CAPTURE_TIMEOUT:-}
      - AUTOMUTEUS_LISTENING=${AUTOMUTEUS_LISTENING:-}
      - BASE_MAP_URL=${BASE_MAP_URL:-}
      - SLASH_COMMAND_GUILD_IDS=${SLASH_COMMAND_GUILD_IDS:-}
      - API_SERVER_URL=${API_SERVER_URL:-}
      - API_ADMIN_PASS=${API_ADMIN_PASS:-}

      # Do **NOT** change these
      - REDIS_ADDR=${REDIS_ADDR}
      - POSTGRES_ADDR=${POSTGRES_ADDR}
      # - SHARDS=0,1
      # - NUM_SHARDS=2
    stop_grace_period: ${STOP_GRACE_PERIOD:-2m}
    depends_on:
      - redis
      - galactus
      - postgres
    volumes:
      - "bot-logs:/app/logs"

  galactus:
    # Either:
    # - Use a prebuilt image
    image: automuteus/galactus:${GALACTUS_TAG:?err}
    # - Build image from local source
    #build: ../galactus
    # - Build image from github directly
    #build: https://github.com/automuteus/galactus.git

    ports:
      # See sample.env for details, but in general, match the GALACTUS_EXTERNAL_PORT w/ the GALACTUS_HOST's port
      - ${GALACTUS_EXTERNAL_PORT:-8123}:${BROKER_PORT}
    restart: always
    environment:
      # Do **NOT** change these
      - BROKER_PORT=${BROKER_PORT}
      - REDIS_ADDR=${REDIS_ADDR}
      # - NUM_SHARDS=2
    depends_on:
      - redis

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - "redis-data:/data"

  postgres:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

  grafana:
    image: grafana/grafana:${GRAFANA_TAG:?err}
    restart: always
    environment:
      - GF_INSTALL_PLUGINS=petrslavotinek-carpetplot-panel, grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:?err}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS:?err}
    ports:
      - ${GRAFANA_EXTERNAL_PORT:-3000}:3000
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - grafana-data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v${PROMETHEUS_TAG:?err}
    restart: always
    # should not be exported externally; uncomment for debugging / testing purposes only.
    #ports:
    #  - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  prometheus-automuteus-exporter:
    image: quay.io/prometheuscommunity/json-exporter:v${PROMETHEUS_AUTOMUTEUS_EXPORTER_TAG:?err}
    restart: always
    # should not be exported externally; uncomment for debugging / testing purposes only.
    #ports:
    #  - 7979:7979
    command:
      - --config.file=/config.yml
    volumes:
      - ./json-exporter/config.yml:/config.yml

volumes:
  bot-logs:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data:
